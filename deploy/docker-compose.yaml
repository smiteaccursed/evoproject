version: "2.0"

volumes:
  mongo-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./mongo/data

  postgresql-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./postgresql/data
  policy-enforcement-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./policy-enforcement-service

services:
  mongo:
    image: mongo:7.0
    volumes:
      - mongo-data:/data/db
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

  postgresql:
    image: postgres:12
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/db-files/
    ports:
      - 5432:5432

  library-service:
    build:
      context: ../service/library-service
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    environment:
      PG_DSN: ${PG_DSN}
    depends_on:
      - postgresql
      
  forum-service:
    build:
      context: ../service/forum-service
      dockerfile: ./Dockerfile
    ports:
      - "5010:5010"
    environment:
      PG_DSN: ${PG_DSN}
    depends_on:
      - postgresql
  user-service:
    build:
      context: ../service/user-service
      dockerfile: ./Dockerfile
    ports:
      - "5020:5020"
    environment:
      PG_DSN: ${PG_ADSN}
      JWT_SECRET: ${JWT_SECRET}
      RESET_PASSWORD_TOKEN_SECRET: ${RESET_PASSWORD_TOKEN_SECRET}
      VERIFICATION_TOKEN_SECRET: ${VERIFICATION_TOKEN_SECRET}
    depends_on:
      - postgresql

  complaint-service:
    build:
      context: ../service/complaint-service
      dockerfile: ./Dockerfile
    ports:
      - "5030:5030"
    environment:
      MONGO_DSN: ${MONGO_DSN}
    depends_on:
      - mongo
  
  policy-enforcement-service:
    build:
      context: ../service/policy-enforcement-service
      dockerfile: ./Dockerfile
    ports:
      - "5100:5100"
    volumes:
      - policy-enforcement-data:/mnt/
    environment:
      JWT_SECRET: ${JWT_SECRET}
      POLICIES_CONFIG_PATH: ${POLICIES_CONFIG_PATH}
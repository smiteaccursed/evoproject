services:
  - name: library-service
    entrypoint: http://localhost:5000/
    inject_token_in_swagger: True
  - name: user-service
    entrypoint: http://localhost:5020/
    inject_token_in_swagger: True
  - name: complaint-service
    entrypoint: http://localhost:5030/
    inject_token_in_swagger: True
  - name: forum-service
    entrypoint: http://localhost:5010/
    inject_token_in_swagger: True
model: |
  [request_definition]
  r = sub, obj, act
  
  [policy_definition]
  p = sub_rule, obj, act
  
  [policy_effect]
  e = some(where (p.eft == allow))
  
  [matchers]
  m = eval(p.sub_rule) && keyMatch(r.obj, p.obj) && regexMatch(r.act, p.act)
policies:
  - service: library-service
    rule: r.sub.group_id > 0
    resource: /books*
    methods: (GET)|(POST)|(PUT)

  - service: library-service
    rule: r.sub.group_id == 1
    resource: /books*
    methods: (GET)|(POST)|(PUT)|(DELETE)

  # USER
  - service: user-service
    rule: r.sub.group_id > 1
    resource: /auth/*
    methods: POST
    white_list: true
  - service: user-service
    resource: /groups*
    methods: (GET)|(POST)|(PUT)|(DELETE)
    white_list: true
  - service: user-service
    resource: /users/*
    methods: (GET)|(POST)|(PUT)|(DELETE)|(PATCH)
    white_list: true

  # COMPLAINT
  - service: complaint-service
    rule: r.sub.group_id > 1
    resource: /complaints*
    methods: POST
  - service: complaint-service
    rule: r.sub.group_id == 1
    resource: /complaints*
    methods: (GET)|(POST)|(PUT)|(DELETE)

  # FORUM
  - service: forum-service
    rule: r.sub.group_id > 1 && r.sub.ban == 0
    resource: /topic*
    methods: (POST)|(GET)
  - service: forum-service
    rule: r.sub.group_id > 1 && r.sub.ban == 0
    resource: /messages*
    methods: (POST)|(GET)
  - service: forum-service
    rule: r.sub.group_id == 1
    resource: /topic*
    methods: (GET)|(POST)|(PUT)|(DELETE)
  - service: forum-service
    rule: r.sub.group_id == 1
    resource: /messages*
    methods: (GET)|(POST)|(PUT)|(DELETE)
